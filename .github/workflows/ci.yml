name: CI

on:
  push:
    branches: [ "main" ]
    paths:
      - '**.java'
      - '**.xml'
      - 'pom.xml'
      - '.github/workflows/**'
  pull_request:
    branches: [ "main" ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    name: Build & Test (os=${{ matrix.os }}, java=${{ matrix.java }})
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        java: [17, 21]
        exclude:
          - os: windows-latest
            java: 21

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Temurin JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
          cache: 'maven'

      - name: Build & test with Maven (incl. JaCoCo)
        run: mvn -B clean verify

      - name: Upload Surefire test reports
        if: always() # even if tests fail, we still want the artifacts
        uses: actions/upload-artifact@v4
        with:
          name: surefire-${{ matrix.os }}-java${{ matrix.java }}
          path: target/surefire-reports

      - name: Upload JaCoCo coverage XML
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-${{ matrix.os }}-java${{ matrix.java }}
          path: target/site/jacoco/jacoco.xml

  sonar-analysis:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: build-and-test
    # only run on push to main, not for every PR from forks (safer with secrets)
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Temurin JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21
          cache: 'maven'

      - name: Build, test, coverage (again) for analysis
        run: mvn -B clean verify

      - name: SonarCloud Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn -B sonar:sonar \
            -Dsonar.organization=${{ secrets.SONAR_ORG || 'raphaelg00' }} \
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY || 'SONAR_TOKEN' }} \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
